class Node:
    """
    ===========================================================================
     Description: Class of Node in Grid.
    ===========================================================================
    """

    def __init__(self, point):
        """
        =======================================================================
         Description: Init Node with Idd.
        =======================================================================
         Arguments:
        -----------------------------------------------------------------------
            1. point : Point (f_map.c_point).
        =======================================================================
        """
        self.point = point
        self.w = 1  
        self.father = None  
        self.g = 0
        self.h = float('Infinity')
        self.f = float('Infinity')

    def __eq__(self, other):
        """
        =======================================================================
         Description: Return True if Self equals to Other.
        =======================================================================
         Arguments:
        -----------------------------------------------------------------------
            1. other : Node
        =======================================================================
         Return: bool (True if Self equals to Other).
        =======================================================================
        """
        if self.point == other.point:
            return True

    def __ne__(self, other):
        """
        =======================================================================
         Description: Return True if Self not equals to Other.
        =======================================================================
         Arguments:
        -----------------------------------------------------------------------
            1. other : Node
        =======================================================================
         Return: bool (True if Self not equals to Other).
        =======================================================================
        """
        return not self.__eq__(other)

    def __lt__(self, other):
        """
        =======================================================================
         Description: Return True if Self is less than Other.
        =======================================================================
         Arguments:
        -----------------------------------------------------------------------
            1. other : Node
        =======================================================================
         Return: bool (True if Self is less than Other).
        =======================================================================
        """
        if self == other:
            return False
        if self.f < other.f:
            return True
        if self.f == other.f:
            if self.g > other.g:
                return True
            elif self.g == other.g and self.point < other.point:
                return True
        return False

    def __le__(self, other):
        """
        =======================================================================
         Description: Return True if Self is less or equal to Other.
        =======================================================================
         Arguments:
        -----------------------------------------------------------------------
            1. other : Node
        =======================================================================
         Return: bool
        =======================================================================
        """
        return self == other or self < other

    def __gt__(self, other):
        """
        =======================================================================
         Description: Return True if Self is greater than Other.
        =======================================================================
         Arguments:
        -----------------------------------------------------------------------
            1. other : Node
        =======================================================================
         Return: bool (True if Self is greater than Other).
        =======================================================================
        """
        return not (self < other) and not (self == other)

    def __ge__(self, other):
        """
        =======================================================================
         Description: Return True if Self is greater or equal than Other.
        =======================================================================
         Arguments:
        -----------------------------------------------------------------------
            1. other : Node
        =======================================================================
         Return: bool
        =======================================================================
        """
        return self == other or self > other

    def __str__(self):
        """
        =======================================================================
         Description: Return String Representation of Node (Node's Point).
        =======================================================================
         Return: str
        =======================================================================
        """
        return str(self.point)


    def __hash__(self):
        """
        =======================================================================
         Description: Return Hash-Value of the Node (Node's Id).
        =======================================================================
         Return: int
        =======================================================================
        """
        return self.point.__hash__()
